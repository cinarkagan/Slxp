
#include "Api.h"

#define DEBUG_MODE

VOID InitConsole() {
	DWORD original_protection;
	VirtualProtect(&FreeConsole, sizeof(uint8_t), PAGE_EXECUTE_READWRITE, &original_protection);
	*reinterpret_cast<uint8_t*>(&FreeConsole) = 0xC3;
	VirtualProtect(&FreeConsole, sizeof(uint8_t), original_protection, NULL);
	AllocConsole();
	FILE* stream;
	freopen_s(&stream, "CONIN$", "r", stdin);
	freopen_s(&stream, "CONOUT$", "w", stdout);
}

DWORD WINAPI InitPipe([[unused]] LPVOID Param) {
	Execution Execution;
	const auto Pipe = CreateNamedPipe("\\\\.\\pipe\\Slobby Xploits", PIPE_ACCESS_DUPLEX | PIPE_TYPE_BYTE | PIPE_READMODE_BYTE, PIPE_WAIT, 1, 1024, 1024, NMPWAIT_USE_DEFAULT_WAIT, NULL);

	while (Pipe != INVALID_HANDLE_VALUE) {
		if (ConnectNamedPipe(Pipe, NULL)) {
			std::string Script;

			char buffer[1024] = {};
			DWORD Read;
			while (ReadFile(Pipe, buffer, 1024, &Read, NULL))
				Script.append(buffer, Read);
			Execution.Execute_Script(luaState, Script);
		}
		DisconnectNamedPipe(Pipe);
	}
}

int Main() {
	Execution Execution;
	LuaState LuaState;
	Roblox Roblox;

	luaState = Offsets::scriptContext::luastate(LuaState.getScriptContext());

    InitConsole();

    Misc::setlevel(luaState, 8);
	Roblox.lua_pushcclosure(luaState, 1, "getreg", NULL);//crashes

    printf("Raised to level 8\n");
    printf("Loaded Slxp\n");

#ifdef DEBUG_MODE
    while (true) {
        printf("Enter your script below\n");
        std::string source;
        std::getline(std::cin, source);
        Execution.Execute_Script(luaState, source);
    }
#else
        CreateThread(NULL, NULL, InitPipe, NULL, NULL, NULL);
#endif
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved) {
    switch (ul_reason_for_call) {
    case DLL_PROCESS_ATTACH:
        CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)(Main), NULL, NULL, NULL);
        break;
    }
    return TRUE;
}

